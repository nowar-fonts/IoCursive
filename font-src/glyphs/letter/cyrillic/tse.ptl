$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import '../../../support/point' as Point

glyph-module

glyph-block Letter-Cyrillic-Tse : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : SerifFrame

	define [CyrTseShape top] : glyph-proc
		include : VBarLeft SB 0 top
		include : HBarBottom SB RightSB 0
		include : VBarRight RightSB 0 top
		include : CyrDescender RightSB (shift -- 0.05)
		if SLAB : let [sf : SerifFrame top 0 SB RightSB] : begin
			include sf.lt.full
			include sf.rt.full
			include sf.lb.outer
			include sf.rb.outer

	create-glyph 'cyrl/Tse' 0x426 : glyph-proc
		include : MarkSet.capital
		include : CyrTseShape CAP

	create-glyph 'cyrl/tse.upright' : glyph-proc
		include : MarkSet.e
		include : CyrTseShape XH

	create-glyph 'cyrl/tse.italic.toothed' : glyph-proc
		include [refer-glyph "u.toothed"] AS_BASE
		eject-contour 'serifRB'
		include : CyrDescender RightSB (shift -- 0.05) (connex -- 0.5)

	create-glyph 'cyrl/tse.italic.motionSerifed' : glyph-proc
		include [refer-glyph "u.motionSerifed"] AS_BASE
		eject-contour 'serifRB'
		include : CyrDescender RightSB (shift -- 0.05) (connex -- 0.5)

	select-variant 'cyrl/tse.italic'
	alias 'cyrl/tse.BGR' null 'cyrl/tse.italic'
